/*
 * Legalesign API
 *
 * Legalesign.com is an electronic signature software. This is the documentation for its REST API.   Start by creating a trial account at https://app1.legalesign.com/auth/intro/. Upon account activation, select the API dev option.  Get an API key by emailing support@legalesign with background on your use-case and skills. You will need to show experience in API dev.  You will be in sandbox mode that will limit you to 5 signers. Add them on https://app1.legalesign.com/acc/settings/#api. Contact support to move to production mode when you are ready.  For any queries contact us at support@legalesign.com. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@legalesign.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing SignerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SignerApiTests
    {
        private SignerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SignerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SignerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' SignerApi
            //Assert.IsInstanceOf(typeof(SignerApi), instance);
        }

        
        /// <summary>
        /// Test GetSigner
        /// </summary>
        [Test]
        public void GetSignerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string signerId = null;
            //var response = instance.GetSigner(signerId);
            //Assert.IsInstanceOf(typeof(SignerResponse), response, "response is SignerResponse");
        }
        
        /// <summary>
        /// Test GetSignerFields
        /// </summary>
        [Test]
        public void GetSignerFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string signerId = null;
            //var response = instance.GetSignerFields(signerId);
            //Assert.IsInstanceOf(typeof(List<InlineResponse2002>), response, "response is List<InlineResponse2002>");
        }
        
        /// <summary>
        /// Test GetSignerLink
        /// </summary>
        [Test]
        public void GetSignerLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string signerId = null;
            //instance.GetSignerLink(signerId);
            
        }
        
        /// <summary>
        /// Test GetSignerRejection
        /// </summary>
        [Test]
        public void GetSignerRejectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string signerId = null;
            //var response = instance.GetSignerRejection(signerId);
            //Assert.IsInstanceOf(typeof(InlineResponse2003), response, "response is InlineResponse2003");
        }
        
        /// <summary>
        /// Test PostSignerReminder
        /// </summary>
        [Test]
        public void PostSignerReminderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string signerId = null;
            //SendReminderPost sendReminderPost = null;
            //instance.PostSignerReminder(signerId, sendReminderPost);
            
        }
        
        /// <summary>
        /// Test PostSignerReset
        /// </summary>
        [Test]
        public void PostSignerResetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string signerId = null;
            //SignerResetResponse signerResetResponse = null;
            //instance.PostSignerReset(signerId, signerResetResponse);
            
        }
        
    }

}
