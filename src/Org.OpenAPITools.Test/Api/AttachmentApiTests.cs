/*
 * Legalesign API
 *
 * Legalesign.com is an electronic signature software. This is the documentation for its REST API.   Start by creating a trial account at https://app1.legalesign.com/auth/intro/. Upon account activation, select the API dev option.  Get an API key by emailing support@legalesign with background on your use-case and skills. You will need to show experience in API dev.  You will be in sandbox mode that will limit you to 5 signers. Add them on https://app1.legalesign.com/acc/settings/#api. Contact support to move to production mode when you are ready.  For any queries contact us at support@legalesign.com. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@legalesign.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing AttachmentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AttachmentApiTests
    {
        private AttachmentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AttachmentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AttachmentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' AttachmentApi
            //Assert.IsInstanceOf(typeof(AttachmentApi), instance);
        }

        
        /// <summary>
        /// Test DeleteAttachment
        /// </summary>
        [Test]
        public void DeleteAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid attachmentId = null;
            //instance.DeleteAttachment(attachmentId);
            
        }
        
        /// <summary>
        /// Test GetAttachment
        /// </summary>
        [Test]
        public void GetAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid attachmentId = null;
            //var response = instance.GetAttachment(attachmentId);
            //Assert.IsInstanceOf(typeof(AttachmentResponse), response, "response is AttachmentResponse");
        }
        
        /// <summary>
        /// Test GetAttachments
        /// </summary>
        [Test]
        public void GetAttachmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string group = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.GetAttachments(group, limit, offset);
            //Assert.IsInstanceOf(typeof(AttachmentListResponse), response, "response is AttachmentListResponse");
        }
        
        /// <summary>
        /// Test PostAttachment
        /// </summary>
        [Test]
        public void PostAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AttachmentPost attachmentPost = null;
            //instance.PostAttachment(attachmentPost);
            
        }
        
    }

}
